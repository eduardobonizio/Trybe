###### criar um diretório, listar arquivos e diretórios, navegar ######
ls #Lista todas as pastas disponíveis com excecção das ocultas
ls -a #Lista todas as pastas disponíveis, inclusive as ocultas
ls -1 | nl #Lista os itens da pasta mas por linha e numerando
cd NomeDoDiretório #Carrega a pasta
mkdir NomeDaNovaPasta #Cria uma nova pasta no local que estou (carregado com o cd)
cd . #Referência o diretório que estou agora
cd .. #Volta para o diretório anterior
pwd #Mostra o caminho completo do diretório atual
touch NomeDoArquivo.extenção #cria um arquivo vazio

###### copiar, mover e remover arquivos, diretórios e renomear######
cp arquivo NomeDaCópia #Copia o primeiro arquivo dando o nome do segundo parametro
cat NomeDoArquivo #Abrir / mostrar o conteúdo do arquivo
cat > NomeDoArquivo #Editar o arquivo pelo terminal
mv NomeDoArquivo /home/eduardo/unix_tests/backup #pwd para ver o caminho e move o arquivo para o local indicado no segundo parametro (Não funcionou quando tentei ~/backup)
mv NomeDoArquivo NovoNome #Em vez de mover o arquivo ele renomeia
rm NomeDoArquivo #Apaga o arquivo
rmdir NomeDaPasta #Apaga a pasta (diretório), só apaga diretório vazio
rm -rf NomeDoDiretório #Apaga tanto o diretório quanto os arquivos (o "f" faz com que não peça confirmação)

###### visualização do conteúdo de arquivos, além de aprender a realizar buscas por palavras-chave ou frases dentro de arquivos ######
less NomeDoArquivo #Gera um modo de visualição por páginas, usar Espaço para continuar e Q para sair, pode digitat /Texto para procurar dentro do arquivo
head NomeDoArquivo #Mostra somente as 10 primeiras linhas (pode usar -5 para exibir somente 5 linhas)
tail NomeDoArquivo #Mostra os 10 ultimos valores do arquivo
grep Palavra NomeDoArquivo # procura a palavra dentro do arquivo (case sensitive) e -i para ignorma case sensitive e se usar 'Frase de Busca' procura frases -v buscar por resultados sem a palavra, -n para buscar o primeiro valor igual a palavra, -c para buscar quantas vezes o valor é repetido
wc NomeDoArquivo # Retorna a quantidade de linhas, palavras e caracter do arquivo. -w quantidade de palavras, -l quantidade de linhas, -c quantidade de caracteres


###### wildcards e nomeação de arquivos######
ls * #Mostra todos os arquivos e pastas que estão naquele diretório
ls ?rybe #? subistitui a primeira letra
nomear todos os arquivos sem espaços no nome e com extenção. pode usar um _ para duas palavras Arquivo_1.txt
man ls #mostra o manual do comando
whatis cp #mostra o que o comando faz
apropos copy #mostra os comandos que possuem algo haver com copy

###### >, >> e | ######
> #Esse sinal significa que vamos atribuir valores (se atribuir a um arquivo existente ele subistituirá o valor do arquivo com o novo informado no terminal.
cat > cores.txt #o comando cat com o ">" cria o arquivo e insere o conteúdo nele, ctrl + d fecha o comando cat e salva. Lembrando que o comando cat tambem lê o arquivo.
>> #Acrescenta valores a um arquivo existente
cat >> cores.txt #Vai adicionar valores ao arquivo cores.txt, ctrl + d fecha o comando cat e salva.
cat arquivo1.txt arquivo2.txt > tudo.txt #Junta os valores do primeiro e do segundo arquivo no terceiro (criando um terceiro arquivo), no caso o tudo.txt
sort < arquivo.txt #O comando de < faz com que o sort ordene os arquivos no modo de visualização, sem editar o arquivo original
sort < arquivo.txt > arquivoOrdenado.txt #Ordena os valores do primeiro arquivo e joga os valores ordenados para o novo arquivo
who #Verifica quem está utilizando o sistema	
| #Comando chamado de pipe, serve para juntar dois comandos, exemplo: who | sort, who | wc -l
	
###### controle de acesso aos arquivos no Unix ######
ls -l #Mostra mais informações sobre os arquivos
-rw-rw-r-- # O "R" siginca read e primte acesso de leitura, "W" vem de write e permite editar, "X" permite editar e excutar pelo comando cd, o primeiro "-" indica que aquele é um arquivo comum, se tiver "D" no início indica que é um diretorio.
|- |rw- | rw- | r-- | #"-" a primeira parte idica uma arquivo comum, "rw-" indica que o usuário pode ler e editar, "rw-" indica que o grupo pode ler e editar, "r--" indica que outros usuários só podem ler.
chmod u-rw arquivo.txt #Altera as permissões de um arquivo, "u" altera permissões apenas para esse usuário, "g" altera para o grupo, "o" altera para outros usuários, "a" altera para todos. "-" retira permissão, "+" acrescenta permissão, "=" deixa como quiser. exemplo: "chmod a=rwx arquivo.txt"

###### o que são, como listar e manipular os processos e jobs ######
ps #exibe os processos abertos, eles podem estar em execução, em background ou suspensos.
sleep 5 #Para o terminal por 5 segundos
& #Deixa o processo em background. Ex.: sleep 5 &
ctrl + z #Deixa o processo suspenso
ctrl + c #Encerra o processo
bg #Continua o processo em background
fg %posiçãoDoProcesso (não é o PID) #Deixa o programando rodando na frente (foreground)
jobs #mostra os processos em execução, em background ou suspensos
kill PID ou %NúmeroDoProcesso #Mata o processo
kill -9 PID #Força a parada do processo

###### find, history e echo
find é um comando para pesquisar em diretórios por arquivos ou outras pastas, de acordo com os parâmetros passados a ele
Esses parâmetros podem ser name, date, size e type
Caso nenhum atributo seja passado, ele pesquisará tudo que estiver dentro do diretório atual.
find . -name "*.txt" #Retorna todos o endereço de todos os arquivos .txt no diretorio atual (nas subpastas também)
find ./teste -name exemplo* ## Localizar tanto arquivos quanto diretórios
find ./teste -type f -name "exemplo*" # Localizar somente arquivos
find ./teste -type d -name "exemplo*" # Localizar somente diretórios

O `history` é um comando que mostra o histórico de comandos que você executou no terminal. A quantidade ou o tamanho desse _"histórico"_ podem ser configurados para um número arbitrário de comandos ou para ver todo o histórico.
history # Mostra o histórico de comandos
history | tail Pegar os últimos 10 comandos

O `echo` é um comando utilizado em scripts ou no terminal para exibir mensagens na tela ou em um arquivo.
echo "Este é um teste" #Exemplo
echo "Este é mais um teste" > teste.txt # Pode ser usado para colocar textos dentro de arquivos. cat teste.txt, 'Frase\nFrase2' o \n faz a quebra de linha
